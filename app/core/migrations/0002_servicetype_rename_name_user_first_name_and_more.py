# Generated by Django 4.2.13 on 2024-06-09 01:06

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('electrician', 'Electrician'), ('plumber', 'Plumber'), ('mechanic', 'Mechanic'), ('carpenter', 'Carpenter'), ('cleaner', 'Cleaner'), ('gardener', 'Gardener'), ('painter', 'Painter'), ('handyman', 'Handyman'), ('barber', 'Barber'), ('hairdresser', 'Hairdresser'), ('makeup_artist', 'Makeup Artist'), ('nail_technician', 'Nail Technician'), ('massage_therapist', 'Massage Therapist'), ('personal_trainer', 'Personal Trainer'), ('tutor', 'Tutor'), ('chef', 'Chef'), ('driver', 'Driver'), ('baby_sitter', 'Baby Sitter'), ('pet_sitter', 'Pet Sitter'), ('dog_walker', 'Dog Walker'), ('photographer', 'Photographer'), ('videographer', 'Videographer'), ('event_planner', 'Event Planner'), ('dj', 'DJ'), ('musician', 'Musician'), ('counselor', 'Counselor'), ('accountant', 'Accountant'), ('lawyer', 'Lawyer'), ('consultant', 'Consultant'), ('web_developer', 'Web Developer'), ('graphic_designer', 'Graphic Designer'), ('it_support', 'IT Support'), ('language_translator', 'Language Translator'), ('interior_designer', 'Interior Designer'), ('landscaper', 'Landscaper'), ('personal_assistant', 'Personal Assistant'), ('yoga_instructor', 'Yoga Instructor'), ('fitness_coach', 'Fitness Coach')], max_length=50, unique=True)),
            ],
        ),
        migrations.RenameField(
            model_name='user',
            old_name='name',
            new_name='first_name',
        ),
        migrations.AddField(
            model_name='user',
            name='last_name',
            field=models.CharField(max_length=255, null=True),
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, choices=[('Lagos', 'Lagos'), ('Los Angeles', 'Los Angeles'), ('London', 'London'), ('Manchester', 'Manchester'), ('New York City', 'New York City')], max_length=255, null=True)),
                ('state', models.CharField(blank=True, choices=[('Lagos', 'Lagos'), ('California', 'California'), ('England', 'England'), ('New York', 'New York')], max_length=255, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('country', models.CharField(blank=True, choices=[('Nigeria', 'Nigeria'), ('United States', 'United States'), ('United Kingdom', 'United Kingdom')], max_length=255, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('bio', models.TextField(blank=True, null=True)),
                ('availability', models.CharField(blank=True, choices=[('Available', 'Available'), ('Busy', 'Busy'), ('On Leave', 'On Leave'), ('Work', 'Work')], max_length=255, null=True)),
                ('email_notifications', models.BooleanField(default=True)),
                ('sms_notifications', models.BooleanField(default=True)),
                ('phone_number', models.CharField(max_length=15, null=True, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$', message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.")])),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProviderProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(blank=True, choices=[('Lagos', 'Lagos'), ('Los Angeles', 'Los Angeles'), ('London', 'London'), ('Manchester', 'Manchester'), ('New York City', 'New York City')], max_length=255, null=True)),
                ('state', models.CharField(blank=True, choices=[('Lagos', 'Lagos'), ('California', 'California'), ('England', 'England'), ('New York', 'New York')], max_length=255, null=True)),
                ('country', models.CharField(blank=True, choices=[('Nigeria', 'Nigeria'), ('United States', 'United States'), ('United Kingdom', 'United Kingdom')], max_length=255, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('bio', models.TextField(blank=True, null=True)),
                ('experience_years', models.PositiveIntegerField(blank=True, null=True)),
                ('certifications', models.TextField(blank=True, null=True)),
                ('availability', models.CharField(blank=True, choices=[('Available', 'Available'), ('Busy', 'Busy'), ('On Leave', 'On Leave'), ('Work', 'Work')], max_length=255, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('documents', models.FileField(blank=True, null=True, upload_to='provider_documents/')),
                ('pricing_details', models.TextField(blank=True, null=True)),
                ('average_rating', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('phone_number', models.CharField(max_length=15, null=True, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$', message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.")])),
                ('service_types', models.ManyToManyField(related_name='provider_service_types', to='core.servicetype')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='provider_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
