# Generated by Django 4.2.14 on 2024-07-31 15:02

import core.models
from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('last_login', models.DateTimeField(auto_now=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProviderProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(blank=True, choices=[('London', 'London'), ('Lagos', 'Lagos'), ('Los Angeles', 'Los Angeles'), ('New York City', 'New York City'), ('Manchester', 'Manchester')], max_length=255, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to=core.models.service_seeker_image_file_path)),
                ('bio', models.TextField(blank=True, null=True)),
                ('experience_years', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('certifications', models.TextField(blank=True, null=True)),
                ('certifications_documents', models.FileField(blank=True, null=True, upload_to=core.models.service_seeker_image_file_path)),
                ('average_rating', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('phone_number', models.CharField(max_length=15, null=True, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$', message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.")])),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='provider_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, choices=[('Lagos', 'Lagos'), ('Los Angeles', 'Los Angeles'), ('London', 'London'), ('Manchester', 'Manchester'), ('New York City', 'New York City')], max_length=255, null=True)),
                ('state', models.CharField(blank=True, choices=[('Lagos', 'Lagos'), ('California', 'California'), ('England', 'England'), ('New York', 'New York')], max_length=255, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('country', models.CharField(blank=True, choices=[('Nigeria', 'Nigeria'), ('United States', 'United States'), ('United Kingdom', 'United Kingdom')], max_length=255, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to=core.models.service_seeker_image_file_path)),
                ('bio', models.TextField(blank=True, null=True)),
                ('availability', models.CharField(blank=True, choices=[('Available', 'Available'), ('Busy', 'Busy'), ('On Leave', 'On Leave'), ('Work', 'Work')], max_length=255, null=True)),
                ('email_notifications', models.BooleanField(default=True)),
                ('sms_notifications', models.BooleanField(default=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$', message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.")])),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(blank=True, choices=[('electrician', 'Electrician'), ('plumber', 'Plumber'), ('mechanic', 'Mechanic'), ('carpenter', 'Carpenter'), ('cleaner', 'Cleaner'), ('gardener', 'Gardener'), ('painter', 'Painter'), ('handyman', 'Handyman'), ('barber', 'Barber'), ('hairdresser', 'Hairdresser'), ('makeup_artist', 'Makeup Artist'), ('nail_technician', 'Nail Technician'), ('massage_therapist', 'Massage Therapist'), ('personal_trainer', 'Personal Trainer'), ('tutor', 'Tutor'), ('chef', 'Chef'), ('driver', 'Driver'), ('baby_sitter', 'Baby Sitter'), ('pet_sitter', 'Pet Sitter'), ('dog_walker', 'Dog Walker'), ('photographer', 'Photographer'), ('videographer', 'Videographer'), ('event_planner', 'Event Planner'), ('dj', 'DJ'), ('musician', 'Musician'), ('counselor', 'Counselor'), ('accountant', 'Accountant'), ('lawyer', 'Lawyer'), ('consultant', 'Consultant'), ('web_developer', 'Web Developer'), ('graphic_designer', 'Graphic Designer'), ('it_support', 'IT Support'), ('language_translator', 'Language Translator'), ('interior_designer', 'Interior Designer'), ('landscaper', 'Landscaper'), ('personal_assistant', 'Personal Assistant'), ('yoga_instructor', 'Yoga Instructor'), ('fitness_coach', 'Fitness Coach')], max_length=50, unique=True)),
                ('description', models.TextField(max_length=255, null=True)),
                ('pricing', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), max_digits=10, null=True)),
                ('availability', models.CharField(blank=True, choices=[('mon_fri_9_6', 'Monday to Friday: 9 AM - 6 PM'), ('mon_fri_8_5', 'Monday to Friday: 8 AM - 5 PM'), ('mon_fri_10_7', 'Monday to Friday: 10 AM - 7 PM'), ('sat_sun_9_5', 'Saturday and Sunday: 9 AM - 5 PM'), ('sat_sun_10_6', 'Saturday and Sunday: 10 AM - 6 PM'), ('mon_sun_9_6', 'Monday to Sunday: 9 AM - 6 PM'), ('mon_sun_8_8', 'Monday to Sunday: 8 AM - 8 PM'), ('available_24_7', 'Available 24/7'), ('mon_wed_fri_9_5', 'Monday, Wednesday, Friday: 9 AM - 5 PM'), ('tue_thu_10_4', 'Tuesday, Thursday: 10 AM - 4 PM'), ('mon_fri_7_12', 'Monday to Friday: 7 AM - 12 PM'), ('mon_fri_1_6', 'Monday to Friday: 1 PM - 6 PM')], max_length=255, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('provider', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='services', to='core.providerprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(blank=True, help_text='Rating must be between 1 and 5.', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('review_text', models.TextField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_reviews_rating', to='core.servicetype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews_rating', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
